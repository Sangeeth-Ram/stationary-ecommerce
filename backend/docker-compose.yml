version: '3.8'

services:
  # Node.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: stationary-app
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/stationary_ecommerce?schema=public
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped

  # PostgreSQL database
  db:
    image: postgres:14-alpine
    container_name: stationary-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: stationary_ecommerce
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d stationary_ecommerce"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Adminer for database management
  adminer:
    image: adminer:latest
    container_name: stationary-adminer
    ports:
      - '8080:8080'
    depends_on:
      - db

volumes:
  postgres_data:
